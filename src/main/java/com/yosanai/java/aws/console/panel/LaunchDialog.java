/*
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package com.yosanai.java.aws.console.panel;

import javax.swing.DefaultComboBoxModel;

import com.amazonaws.services.ec2.model.InstanceType;
import com.yosanai.java.aws.console.Messages;

/**
 * 
 * @author Saravana Perumal Shanmugam
 */
public class LaunchDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;

    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form LaunchDialog */
    public LaunchDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboInstance.getModel();
        for (InstanceType instanceType : InstanceType.values()) {
            model.addElement(instanceType);
        }
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    public InstanceType getSelectedInstanceType() {
        InstanceType ret = null;
        if (null != cboInstance.getSelectedItem()) {
            ret = (InstanceType) cboInstance.getSelectedItem();
        }
        return ret;
    }

    public int getSelectedInstanceCount() {
        return sldInstances.getValue();
    }

    public String getAMIID() {
        return txtAmi.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed"
    // desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlBottom = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();
        lblInstance = new javax.swing.JLabel();
        cboInstance = new javax.swing.JComboBox();
        sldInstances = new javax.swing.JSlider();
        lblInstances = new javax.swing.JLabel();
        lblDescription = new javax.swing.JLabel();
        scrDesc = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        lblAMI = new javax.swing.JLabel();
        txtAmi = new javax.swing.JTextField();

        setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        pnlBottom.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        pnlBottom.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        pnlBottom.add(cancelButton);

        getContentPane().add(pnlBottom, java.awt.BorderLayout.PAGE_END);

        pnlCenter.setLayout(new java.awt.GridBagLayout());

        lblInstance.setText("Instance Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlCenter.add(lblInstance, gridBagConstraints);

        cboInstance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboInstanceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlCenter.add(cboInstance, gridBagConstraints);

        sldInstances.setMajorTickSpacing(1);
        sldInstances.setMaximum(10);
        sldInstances.setMinimum(1);
        sldInstances.setPaintLabels(true);
        sldInstances.setPaintTicks(true);
        sldInstances.setSnapToTicks(true);
        sldInstances.setValue(1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        pnlCenter.add(sldInstances, gridBagConstraints);

        lblInstances.setText("Instances");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        pnlCenter.add(lblInstances, gridBagConstraints);

        lblDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        pnlCenter.add(lblDescription, gridBagConstraints);

        txtDesc.setColumns(20);
        txtDesc.setLineWrap(true);
        txtDesc.setRows(5);
        txtDesc.setEnabled(false);
        scrDesc.setViewportView(txtDesc);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 2.0;
        pnlCenter.add(scrDesc, gridBagConstraints);

        lblAMI.setText("AMI ID");
        pnlCenter.add(lblAMI, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        pnlCenter.add(txtAmi, gridBagConstraints);

        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboInstanceActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cboInstanceActionPerformed
        Object obj = cboInstance.getSelectedItem();
        if (null != obj) {
            txtDesc.setText(Messages.getString("InstanceType." + InstanceType.fromValue(obj.toString()).name()));
        }
    }// GEN-LAST:event_cboInstanceActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }// GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }// GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {// GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }// GEN-LAST:event_closeDialog

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
     * @param args
     *            the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LaunchDialog dialog = new LaunchDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;

    private javax.swing.JComboBox cboInstance;

    private javax.swing.JLabel lblAMI;

    private javax.swing.JLabel lblDescription;

    private javax.swing.JLabel lblInstance;

    private javax.swing.JLabel lblInstances;

    private javax.swing.JButton okButton;

    private javax.swing.JPanel pnlBottom;

    private javax.swing.JPanel pnlCenter;

    private javax.swing.JScrollPane scrDesc;

    private javax.swing.JSlider sldInstances;

    private javax.swing.JTextField txtAmi;

    private javax.swing.JTextArea txtDesc;

    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
